#!/usr/bin/env python3
"""
MLflow Model Registration Examples
–ü–æ–∫–∞–∑—É—î —Ä—ñ–∑–Ω—ñ —Å–ø–æ—Å–æ–±–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –º–æ–¥–µ–ª–µ–π –≤ MLflow Model Registry
"""

import mlflow
from mlflow.tracking import MlflowClient
import os
from pathlib import Path

if not os.environ.get('MLFLOW_TRACKING_URI'):
    print("‚ùå –ó–º—ñ–Ω–Ω–∞ MLFLOW_TRACKING_URI –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    exit(1)
if not os.environ.get('MLFLOW_TRACKING_USERNAME'):
    print("‚ùå –ó–º—ñ–Ω–Ω–∞ MLFLOW_TRACKING_USERNAME –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    exit(1)
if not os.environ.get('MLFLOW_TRACKING_PASSWORD'):
    print("‚ùå –ó–º—ñ–Ω–Ω–∞ MLFLOW_TRACKING_PASSWORD –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    exit(1)

client = MlflowClient()

print("üöÄ MLflow Model Registration Examples")
print("=" * 50)

# –ú–µ—Ç–æ–¥ 1: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø—ñ–¥ —á–∞—Å –ª–æ–≥—É–≤–∞–Ω–Ω—è (—è–∫ —É train.py)
print("\n1Ô∏è‚É£ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø—ñ–¥ —á–∞—Å –ª–æ–≥—É–≤–∞–Ω–Ω—è:")
print("""
mlflow.sklearn.log_model(
    model, 
    name="model",
    input_example=input_example,
    registered_model_name="iris_classifier"  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–µ—î—Å—Ç—Ä—É—î
)
""")

# –ú–µ—Ç–æ–¥ 2: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —ñ—Å–Ω—É—é—á–æ—ó –º–æ–¥–µ–ª—ñ –∑–∞ URI
print("\n2Ô∏è‚É£ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —ñ—Å–Ω—É—é—á–æ—ó –º–æ–¥–µ–ª—ñ –∑–∞ URI:")
print("""
# –Ø–∫—â–æ —É –≤–∞—Å —î model_uri –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–ø—É—Å–∫—É
model_uri = "runs:/abc123/model"
model_version = mlflow.register_model(
    model_uri=model_uri,
    name="iris_classifier"
)
""")

# –ú–µ—Ç–æ–¥ 3: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è registered model
print("\n3Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è registered model —á–µ—Ä–µ–∑ –∫–ª—ñ—î–Ω—Ç:")
print("""
from mlflow.tracking import MlflowClient
client = MlflowClient()

# –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π registered model
try:
    client.create_registered_model("iris_classifier")
    print("‚úÖ Registered model —Å—Ç–≤–æ—Ä–µ–Ω–æ")
except mlflow.exceptions.RestException:
    print("‚ÑπÔ∏è Registered model –≤–∂–µ —ñ—Å–Ω—É—î")

# –î–æ–¥–∞—Ç–∏ –≤–µ—Ä—Å—ñ—é –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ registered model
model_version = client.create_model_version(
    name="iris_classifier",
    source=model_uri,
    description="Iris classification model v1.0"
)
""")

# –ú–µ—Ç–æ–¥ 4: –ö–µ—Ä—É–≤–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ—è–º–∏ —Ç–∞ —Å—Ç–∞–¥—ñ—è–º–∏
print("\n4Ô∏è‚É£ –ö–µ—Ä—É–≤–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ—è–º–∏ —Ç–∞ —Å—Ç–∞–¥—ñ—è–º–∏:")
print("""
# –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞–¥—ñ—é –≤–µ—Ä—Å—ñ—ó –º–æ–¥–µ–ª—ñ
client.transition_model_version_stage(
    name="iris_classifier",
    version=1,
    stage="Staging"  # None, Staging, Production, Archived
)

# –î–æ–¥–∞—Ç–∏ –æ–ø–∏—Å –¥–æ –≤–µ—Ä—Å—ñ—ó
client.update_model_version(
    name="iris_classifier",
    version=1,
    description="Initial iris classifier model with 95% accuracy"
)

# –î–æ–¥–∞—Ç–∏ —Ç–µ–≥–∏
client.set_model_version_tag(
    name="iris_classifier",
    version=1,
    key="validation_status",
    value="passed"
)
""")

# –ú–µ—Ç–æ–¥ 5: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ –∑ Registry
print("\n5Ô∏è‚É£ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ –∑ Registry:")
print("""
# –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—é –≤–µ—Ä—Å—ñ—é
model = mlflow.sklearn.load_model("models:/iris_classifier/latest")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –≤–µ—Ä—Å—ñ—é
model = mlflow.sklearn.load_model("models:/iris_classifier/1")

# –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó —Å—Ç–∞–¥—ñ—ó
model = mlflow.sklearn.load_model("models:/iris_classifier/Production")
""")

# –ü—Ä–∞–∫—Ç–∏—á–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥
print("\nüîß –ü—Ä–∞–∫—Ç–∏—á–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥:")

try:
    # –°–ø—Ä–æ–±–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ registered model
    try:
        registered_model = client.create_registered_model(
            name="iris_classifier",
            description="–ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –¥–∞—Ç–∞—Å–µ—Ç—É Iris"
        )
        print("‚úÖ Registered model 'iris_classifier' —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    except Exception as e:
        print(f"‚ÑπÔ∏è Registered model –≤–∂–µ —ñ—Å–Ω—É—î: {e}")
    
    # –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ registered models
    models = client.search_registered_models()
    print(f"\nüìã –í—Å—å–æ–≥–æ registered models: {len(models)}")
    for model in models:
        print(f"   - {model.name}")
        
except Exception as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

print("\n" + "=" * 50)
print("üí° –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Model Registry:")
print("   - –ü–µ—Ä–µ–≥–ª—è–¥ –º–æ–¥–µ–ª–µ–π: MLflow UI -> Models")
print("   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: https://mlflow.org/docs/latest/model-registry.html")
print("   - REST API: GET /api/2.0/mlflow/registered-models/list")
